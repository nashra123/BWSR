{
  "task": "kernel_estimate_sr_on_the_fly"     //  classical image sr for x2/x3/x4/x8. root/task/images-models-options
  , "model": "bwsr" // "plain" | "plain2" if two inputs
  , "gpu_ids": [0]
  , "dist": false

  , "scale": 4       // 2 | 3 | 4 | 8
  , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color


  , "degradation": {
    "random_degradation": true
    , "ksize": 21
    , "sig_min": 0.2
    , "sig_max": 4.0
    , "rate_iso": 1.0
    , "random_disturb": false
    , "interpolate_mode": "nearest"

    , "noise": false
    // , "noise_high": 25

    , "quality_set": [10, 20, 30, 40]

  }
  

  , "path": {
    "root": "superresolution"            // "denoising" | "superresolution" | "dejpeg"
    , "pretrained_netG": null      // path of pretrained model. We fine-tune X3/X4/X8 models from X2 model, so that `G_optimizer_lr` and `G_scheduler_milestones` can be halved to save time.
    , "pretrained_netE": null      // path of pretrained model
  }

  , "datasets": {
    "train": {
      "name": "train_dataset"           // just name
      , "dataset_type": "gt"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
      , "dataroot_H": "trainsets/trainH" // path of H training dataset. DIV2K (800 training images)

      , "H_size": 96                   // 96/144|192/384 | 128/192/256/512. LR patch size is set to 48 or 64 when compared with RCAN or RRDB.

      , "dataloader_shuffle": true
      , "dataloader_num_workers": 4
      , "dataloader_batch_size": 4      // batch size 1 | 16 | 32 | 48 | 64 | 128. Total batch size =4x8=32 in SwinIR
    }
    , "test": {
      "name": "test_dataset"            // just name
      , "dataset_type": "sr"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
      , "dataroot_H": "testsets/Urban100/HR/x4"  // path of H testing dataset
      , "dataroot_L": "testsets/Urban100/LRblur/x4"              // path of L testing dataset

    }
  }

  , "netG": {
    "net_type": "bwsr" 

    , "init_type": "default"
  }

  , "train": {
    "epochs": 1000000
    , "G_p_lossfn_type": "l1"           // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
    , "G_h_lossfn_type": "l2"           // "l1" | "l2sum" | "l2" preferred | "ssim" | "charbonnier"
    , "G_lossfn_weight": 1.0            // default
    , "G_lossfn_lambda_p": 1.0          // coefficient of $\hat{p} - p$ expression in loss function
    , "G_lossfn_lambda_h": 0.1          // coefficient of $\tilde{p}$ expression in loss function

    , "manual_seed": 42                 // manual seed to make result reproducible

    , "E_decay": 0.999                  // Exponential Moving Average for netG: set 0 to disable; default setting 0.999

    , "G_optimizer_type": "adam"        // fixed, adam is enough
    , "G_optimizer_lr": 2e-4            // learning rate
    , "G_optimizer_wd": 0               // weight decay, default 0
    , "G_optimizer_clipgrad": null      // unused
    , "G_optimizer_reuse": true         // 

    , "G_scheduler_type": "MultiStepLR" // "MultiStepLR" is enough
    , "G_scheduler_milestones": [250000, 400000, 450000, 475000, 500000]
    , "G_scheduler_gamma": 0.5

    , "G_regularizer_orthstep": null    // unused
    , "G_regularizer_clipstep": null    // unused

    , "G_param_strict": true
    , "E_param_strict": true

    , "checkpoint_test": 200          // for testing
    , "checkpoint_save": 200           // for saving model
    , "checkpoint_print": 100           // for print
  }
}
