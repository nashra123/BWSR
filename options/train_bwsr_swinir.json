{
    "task": "BWSR-SwinIRx4"     //  classical image sr for x2/x3/x4/x8. root/task/images-models-options
    , "model": "bwsr_swinir" // "plain" | "plain2" if two inputs
    , "gpu_ids": [0]
    , "dist": false
  
    , "scale": 4       // 2 | 3 | 4 | 8
    , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color
  
  
    , "degradation": {
      "random_degradation": true
      , "ksize": 21
      , "sig_min": 0.2
      , "sig_max": 4.0
      , "rate_iso": 1.0
      , "random_disturb": false
      , "interpolate_mode": "bicubic"
  
      , "noise": false
      // , "noise_high": 25
  
      , "quality_set": [10, 20, 30, 40]
  
    }
    
  
    , "path": {
      "root": "superresolution"            // "denoising" | "superresolution" | "dejpeg"
      , "pretrained_netG": null      // path of pretrained model. We fine-tune X3/X4/X8 models from X2 model, so that `G_optimizer_lr` and `G_scheduler_milestones` can be halved to save time.
      , "pretrained_netE": null      // path of pretrained model
    }
  
    , "datasets": {
      "train": {
        "name": "train_dataset"           // just name
        , "dataset_type": "gt"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
        , "dataroot_H": "trainsets/trainH" // path of H training dataset. DIV2K (800 training images)
  
        , "H_size": 256                   // 96/144|192/384 | 128/192/256/512. LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
  
        , "dataloader_shuffle": true
        , "dataloader_num_workers": 4
        , "dataloader_batch_size": 4      // batch size 1 | 16 | 32 | 48 | 64 | 128. Total batch size =4x8=32 in SwinIR
      }
      , "test": {
        "name": "test_dataset"            // just name
        , "dataset_type": "sr"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
        , "dataroot_H": "testsets/Urban100/HR/x4"  // path of H testing dataset
        , "dataroot_L": "testsets/Urban100/LRblur/x4"              // path of L testing dataset
  
      }
    }
  
    , "netG": {
      "net_type": "bwsr-swinir"
      , "bwsr": {
        "net_type": "bwsr" 
        , "trainable": false
        , "checkpoint_path": "model_zoo/bwsr/4000_E.pth"
  
        , "init_type": "default"
      }
      , "swinir": {
        "f1": {
          "net_type": "swinir" 
          , "upscale": 4                      // 2 | 3  | 4 | 8
          , "in_chans": 3 
          , "img_size": 24                    // For fair comparison, LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
          , "window_size": 8  
          , "img_range": 1.0 
          , "depths": [6] 
          , "embed_dim": 180 
          , "num_heads": [6]
          , "mlp_ratio": 2 
          , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
          , "resi_connection": "1conv"        // "1conv" | "3conv"
  
          , "init_type": "default"
        }
        , "f2": {
          "net_type": "swinir" 
          , "upscale": 4                      // 2 | 3  | 4 | 8
          , "in_chans": 3 
          , "img_size": 24                    // For fair comparison, LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
          , "window_size": 8  
          , "img_range": 1.0 
          , "depths": [6] 
          , "embed_dim": 180 
          , "num_heads": [6]
          , "mlp_ratio": 2 
          , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
          , "resi_connection": "1conv"        // "1conv" | "3conv"
  
          , "init_type": "default"
        }
        , "f3": {
          "net_type": "swinir" 
          , "upscale": 4                      // 2 | 3  | 4 | 8
          , "in_chans": 3 
          , "img_size": 24                    // For fair comparison, LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
          , "window_size": 8  
          , "img_range": 1.0 
          , "depths": [6, 6, 6, 6, 6, 6, 6, 6, 6] 
          , "embed_dim": 180 
          , "num_heads": [6, 6, 6, 6, 6, 6, 6, 6, 6]
          , "mlp_ratio": 2 
          , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
          , "resi_connection": "1conv"        // "1conv" | "3conv"
  
          , "init_type": "default"
        }
        , "f4": {
          "net_type": "swinir" 
          , "upscale": 4                      // 2 | 3  | 4 | 8
          , "in_chans": 540
          , "out_chans": 3 
          , "img_size": 24                    // For fair comparison, LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
          , "window_size": 8  
          , "img_range": 1.0 
          , "depths": [6] 
          , "embed_dim": 540 
          , "num_heads": [6]
          , "mlp_ratio": 2 
          , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
          , "resi_connection": "1conv"        // "1conv" | "3conv"
  
          , "init_type": "default"
        }
      }
    }
  
    , "train": {
      "epochs": 100000
      , "G_lossfn_weight": 1.0            // default
      , "G_f1_lossfn_type": "l1"          // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
      , "G_f2_lossfn_type": "l1"          // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
      , "G_f3_lossfn_type": "l1"          // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
      , "G_f4_lossfn_type": "l1"          // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
      , "G_lossfn_lambda_f1": 0.0         // coefficient of $f_1(\hat{p}) - x$ expression in loss function
      , "G_lossfn_lambda_f2": 0.0         // coefficient of $f_2(\hat{p}) - x$ expression in loss function
      , "G_lossfn_lambda_f3": 0.0         // coefficient of $f_3(y) - x$ expression in loss function
      , "G_lossfn_lambda_f4": 1.0         // coefficient of $\hat{x} - x$ expression in loss function
  
      , "manual_seed": 42                 // manual seed to make result reproducible
  
      , "E_decay": 0.999                  // Exponential Moving Average for netG: set 0 to disable; default setting 0.999
  
      , "G_optimizer_type": "adam"        // fixed, adam is enough
      , "G_optimizer_lr": 2e-4            // learning rate
      , "G_optimizer_wd": 0               // weight decay, default 0
      , "G_optimizer_clipgrad": null      // unused
      , "G_optimizer_reuse": true         // 
  
      , "G_scheduler_type": "MultiStepLR" // "MultiStepLR" is enough
      , "G_scheduler_milestones": [250000, 400000, 450000, 475000, 500000]
      , "G_scheduler_gamma": 0.5
  
      , "G_regularizer_orthstep": null    // unused
      , "G_regularizer_clipstep": null    // unused
  
      , "G_param_strict": true
      , "E_param_strict": true
  
      , "checkpoint_test": 20000          // for testing
      , "checkpoint_save": 10000           // for saving model
      , "checkpoint_print": 200           // for print
    }
  }
  
  
